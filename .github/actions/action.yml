name: 'CI/CD Multi Stack'
description: 'Run build & test for Java, Node.js, or Python based on tech stack input.'

inputs:
  tech-stack:
    description: 'Tech stack to run CI/CD for (java, node, python)'
    required: true
    type: string

outputs:
  stack:
    description: "Validated tech stack"
    value: ${{ steps.choose_stack.outputs.stack }}

runs:
  using: "composite"
  steps:
    - name: Check tech stack input
      id: choose_stack
      shell: bash
      run: |
        case "${{ inputs.tech-stack }}" in
          java)   echo "stack=java" >> $GITHUB_OUTPUT ;;
          node)   echo "stack=node" >> $GITHUB_OUTPUT ;;
          python) echo "stack=python" >> $GITHUB_OUTPUT ;;
          *)      echo "::error::Invalid tech stack: '${{ inputs.tech-stack }}'. Accepted: java, node, python."; exit 1 ;;
        esac

    - name: Checkout
      uses: actions/checkout@v4

    # ---------------- JAVA ----------------
    - name: Setup Java
      if: ${{ steps.choose_stack.outputs.stack == 'java' }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'

    - name: Build with Maven
      if: ${{ steps.choose_stack.outputs.stack == 'java' }}
      shell: bash
      run: mvn clean install -DskipTests=false

    # ---------------- NODE ----------------
    - name: Setup Node.js
      if: ${{ steps.choose_stack.outputs.stack == 'node' }}
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies (Node.js)
      if: ${{ steps.choose_stack.outputs.stack == 'node' }}
      shell: bash
      run: npm install

    - name: Run tests (Node.js)
      if: ${{ steps.choose_stack.outputs.stack == 'node' }}
      shell: bash
      run: npm test

    # ---------------- PYTHON ----------------
    - name: Setup Python
      if: ${{ steps.choose_stack.outputs.stack == 'python' }}
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies (Python)
      if: ${{ steps.choose_stack.outputs.stack == 'python' }}
      shell: bash
      run: pip install -r requirements.txt

    - name: Run tests (Python)
      if: ${{ steps.choose_stack.outputs.stack == 'python' }}
      shell: bash
      run: pytest

    # ---------------- LOGGING ----------------
    - name: Print Build Info
      shell: bash
      run: |
        echo "🚀 Build Number: ${{ github.run_number }}"
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "🔗 PR Number: ${{ github.event.pull_request.number }}"
        fi
        echo "📌 Job Status: ${{ job.status }}"
        echo "🛠️ Tech Stack: ${{ steps.choose_stack.outputs.stack }}"

    - name: Update Job Summary
      shell: bash
      run: |
        echo "### CI/CD Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Build Number: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "- PR Number: ${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- Tech Stack: ${{ steps.choose_stack.outputs.stack }}" >> $GITHUB_STEP_SUMMARY
        echo "- Final Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
