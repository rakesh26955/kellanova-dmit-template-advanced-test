name: ci-dispatcher (reusable)

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      group:
        required: true
        type: string
      project:
        required: true
        type: string
      environment:
        required: true
        type: string
      instance:
        required: true
        type: string
      pool:
        required: true
        type: string
    secrets:
      GH_Token:
        required: true

permissions:
  contents: read

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo (app)
        uses: actions/checkout@v4
        with:
          path: app

      - name: Checkout template repo (self)
        uses: actions/checkout@v4
        with:
          repository: rakesh26955/kellanova-dmit-template-advanced-test
          token: ${{ secrets.GH_Token }}
          path: temp
          persist-credentials: false

      - name: Validate inputs (simple)
        id: validate
        run: |
          echo "workspace=${{ inputs.workspace }}" >> $GITHUB_OUTPUT
          echo "group=${{ inputs.group }}" >> $GITHUB_OUTPUT
          echo "project=${{ inputs.project }}" >> $GITHUB_OUTPUT
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          echo "instance=${{ inputs.instance }}" >> $GITHUB_OUTPUT
          echo "pool=${{ inputs.pool }}" >> $GITHUB_OUTPUT

      - name: Check for .zip files in workspace
        run: |
          WS="app/${{ steps.validate.outputs.workspace }}"
          echo "Checking: $WS"
          if compgen -G "${WS}/*.zip" > /dev/null; then
            ls -la "${WS}"/*.zip || true
          else
            echo "No .zip files found in ${WS}" >&2
            exit 1
          fi

      - name: (Optional) Show deploy-wrapper presence
        env:
          SERVER_CONFIG: temp/config/server.properties
        run: |
          DEPLOY_WRAPPER="temp/.github/scripts/deploy-content-packages.sh"
          if [ -f "$DEPLOY_WRAPPER" ]; then
            chmod +x "$DEPLOY_WRAPPER" || true
            echo "Deploy wrapper present at $DEPLOY_WRAPPER"
            # To actually run it uncomment the line below once you're ready and scripts exist:
            # bash "$DEPLOY_WRAPPER" "app/${{ steps.validate.outputs.workspace }}" "${{ inputs.group }}" "${{ inputs.project }}" "${{ inputs.environment }}" "${{ inputs.instance }}" "${{ inputs.pool }}"
          else
            echo "No deploy wrapper at $DEPLOY_WRAPPER; skipping."
          fi
