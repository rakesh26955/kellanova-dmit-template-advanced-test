name: ci-dispatcher (deploy-enabled)

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      group:
        required: true
        type: string
      project:
        required: true
        type: string
      environment:
        required: true
        type: string
      instance:
        required: true
        type: string
      pool:
        required: true
        type: string
    secrets:
      GH_Token:
        required: true

permissions:
  contents: read

jobs:
  run-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo (app)
        uses: actions/checkout@v4
        with:
          path: app

      - name: Checkout template repo (self)
        uses: actions/checkout@v4
        with:
          repository: rakesh26955/kellanova-dmit-template-advanced-test
          token: ${{ secrets.GH_Token }}
          path: temp
          persist-credentials: false

      - name: Ensure scripts are executable
        run: |
          chmod +x temp/.github/scripts/*.sh || true
          ls -la temp/.github/scripts || true

      - name: Validate inputs (simple)
        id: validate
        run: |
          echo "workspace=${{ inputs.workspace }}" >> $GITHUB_OUTPUT
          echo "group=${{ inputs.group }}" >> $GITHUB_OUTPUT
          echo "project=${{ inputs.project }}" >> $GITHUB_OUTPUT
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          echo "instance=${{ inputs.instance }}" >> $GITHUB_OUTPUT
          echo "pool=${{ inputs.pool }}" >> $GITHUB_OUTPUT

      - name: Check for .zip files in workspace
        run: |
          WS="app/${{ steps.validate.outputs.workspace }}"
          echo "Checking for packages in: $WS"
          if compgen -G "${WS}/*.zip" > /dev/null; then
            ls -la "${WS}"/*.zip || true
          else
            echo "No .zip files found in ${WS}" >&2
            exit 1
          fi

      - name: Run deploy wrapper (real deploy)
        env:
          SERVER_CONFIG: temp/config/server.properties
        run: |
          set -euo pipefail
          DEPLOY_WRAPPER="temp/.github/scripts/deploy-content-packages.sh"

          if [ ! -f "$DEPLOY_WRAPPER" ]; then
            echo "ERROR: Deploy wrapper not found at $DEPLOY_WRAPPER" >&2
            exit 1
          fi

          # Make sure wrapper is executable
          chmod +x "$DEPLOY_WRAPPER" || true

          echo "Running deploy wrapper:"
          echo "  workspace: app/${{ steps.validate.outputs.workspace }}"
          echo "  group: ${{ inputs.group }} project: ${{ inputs.project }} env: ${{ inputs.environment }} instance: ${{ inputs.instance }} pool: ${{ inputs.pool }}"

          # call wrapper with the workspace path (caller repo checked out into app/)
          bash "$DEPLOY_WRAPPER" \
            "app/${{ steps.validate.outputs.workspace }}" \
            "${{ inputs.group }}" \
            "${{ inputs.project }}" \
            "${{ inputs.environment }}" \
            "${{ inputs.instance }}" \
            "${{ inputs.pool }}"

      - name: Cleanup (optional)
        if: always()
        run: |
          echo "Deploy step completed (success or failure)."
