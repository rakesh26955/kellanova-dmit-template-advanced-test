name: Run Both Shell Scripts Sequentially (callable & manual)

on:
  workflow_call:
    inputs:
      runner_label:
        description: "Runner label to use (e.g. self-hosted-0009 or ubuntu-latest)"
        required: false
        type: string
        default: "ubuntu-latest"
      workspace:
        description: "Workspace path"
        required: true
        type: string
      group:
        description: "Group name"
        required: true
        type: string
      project:
        description: "Project name"
        required: true
        type: string
      environment:
        description: "Environment name (dev, stage, prod)"
        required: true
        type: string
      instance:
        description: "Instance type"
        required: true
        type: string
      pool:
        description: "Pool name (kstl, kfr)"
        required: true
        type: string

  workflow_dispatch:
    inputs:
      runner_label:
        description: "Runner label to use (e.g. self-hosted-0009 or ubuntu-latest)"
        required: false
        default: "ubuntu-latest"
      workspace:
        description: "Workspace path"
        required: true
        default: "workspace"
      group:
        description: "Group name"
        required: true
        default: "kellanova"
      project:
        description: "Project name"
        required: true
        default: "demo-project"
      environment:
        description: "Environment name (dev, stage, prod)"
        required: true
        default: "dev"
      instance:
        description: "Instance type"
        required: true
        default: "instance1"
      pool:
        description: "Pool name (kstl, kfr)"
        required: true
        default: "kstl"

jobs:
  run-scripts:
    runs-on: ${{ inputs.runner_label || github.event.inputs.runner_label || 'ubuntu-latest' }}

    steps:
      - name: Checkout caller repository (default)
        uses: actions/checkout@v4

      - name: Checkout template repository (where the scripts live)
        uses: actions/checkout@v4
        with:
          repository: rakesh26955/kellanova-dmit-template-advanced-test
          ref: main
          path: template
          # If this repo is private and the workflow is called from another repo, you may need a PAT:
          # token: ${{ secrets.TEMPLATE_PAT }}

      - name: Print runner & inputs
        run: |
          echo "Runner name: $RUNNER_NAME"
          echo "Runner OS: $(uname -a || true)"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "Inputs:"
          echo "  runner_label='${{ inputs.runner_label || github.event.inputs.runner_label }}'"
          echo "  workspace='${{ inputs.workspace || github.event.inputs.workspace }}'"
          echo "  group='${{ inputs.group || github.event.inputs.group }}'"
          echo "  project='${{ inputs.project || github.event.inputs.project }}'"
          echo "  environment='${{ inputs.environment || github.event.inputs.environment }}'"
          echo "  instance='${{ inputs.instance || github.event.inputs.instance }}'"
          echo "  pool='${{ inputs.pool || github.event.inputs.pool }}'"

      - name: List workspace & template (debug)
        run: |
          echo "PWD=$(pwd)"
          echo "Caller repo root listing:"
          ls -la . || true
          echo "Template checkout listing (template/):"
          ls -la template || true
          echo "Template .github/scripts listing:"
          ls -la template/.github || true
          ls -la template/.github/scripts || true

      - name: Show script (head) if present
        run: |
          SCRIPT_PATH="template/.github/scripts/deploy-content-packages.sh"
          if [ -f "$SCRIPT_PATH" ]; then
            echo "Found $SCRIPT_PATH - printing head (first 200 lines):"
            head -n 200 "$SCRIPT_PATH" || true
            ls -l "$SCRIPT_PATH"
          else
            echo "ERROR: $SCRIPT_PATH not found in template checkout"
            exit 2
          fi

      - name: Run deploy-content-packages.sh (traced)
        run: |
          set -euo pipefail
          SCRIPT_PATH="template/.github/scripts/deploy-content-packages.sh"

          chmod +x "$SCRIPT_PATH" || true

          WSPACE="${{ inputs.workspace || github.event.inputs.workspace }}"
          G="${{ inputs.group || github.event.inputs.group }}"
          P="${{ inputs.project || github.event.inputs.project }}"
          E="${{ inputs.environment || github.event.inputs.environment }}"
          I="${{ inputs.instance || github.event.inputs.instance }}"
          PO="${{ inputs.pool || github.event.inputs.pool }}"

          echo "Executing $SCRIPT_PATH with arguments:"
          echo "  $WSPACE $G $P $E $I $PO"

          bash -x "$SCRIPT_PATH" "$WSPACE" "$G" "$P" "$E" "$I" "$PO"
